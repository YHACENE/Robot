#!/usr/bin/python
#coding:utf-8

from socket import *
from time import sleep
import threading

ctr_cmds = ['forward', 'backward', 'left', 'right', 'get_video']

HOST = ''
PORT = 12000
BUFSIZE = 1024
ADDR = (HOST, PORT)

class MyServer(threading.Thread):
	def __init__(self, ip, port, clientsocket):
		self
	def do_GET(self):
		print("Waiting for connection ...")
		tcp_cli_soc, addr = tcp_ser_soc.accept()
		print("Connected from: {}".format(addr))
		cmd = ctr_cmds.get(tcp_cli_soc.recv(BUFSIZE), None)
		print tcp_cli_soc_recv(BUFSIZE)
		"""try:
			while True:
				cmd = ''
				cmd = tcp_cli_soc.recv(BUFSIZE)
				cmd = cmd.decode("utf8")
				if not cmd:
					break;
				if cmd == ctr_cmds[0]:
					allum_gpio14()
					print("Forward")
				if cmd == ctr_cmds[1]:
					print("Backward")
				if cmd == ctr_cmds[2]:
					print("Left")
				if cmd == ctr_cmds[3]:
					print("Right")
				if cmd == ctr_cmds[4]:
					print("Sending ...")
		except KeyboardInterrupt as e:
			print("#ERROR: {}".format(e))
		"""
tcp_ser_soc = socket(AF_INET, SOCK_STREAM)
tcp_ser_soc.bind(ADDR)

if __name__ == "__main__":
	tcp_ser_soc.listen(5)
	serv = MyServer()
	serv.serve_forever()
	#tcp_cli_soc.close()
	#tcp_ser_soc.close()
